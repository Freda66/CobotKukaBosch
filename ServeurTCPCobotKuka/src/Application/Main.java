package Application;

import java.io.IOException;
import java.lang.ClassNotFoundException;

import Serveur.*;
import Client.*;

import java.util.Iterator;
import org.json.*;

/**
 * Point d'entré de l'application (début du programme)
 * @author Bosch, Berriche, Cano, Danjoux, Durand, Olivieri
 * @date 01/10/2015
 */
public class Main {
    
    public static void main(String args[]) throws IOException, ClassNotFoundException {
    	// Créer le serveur pour écouter les commandes de dessin du client
    	TCPServer server = new TCPServer(9191, 65534); // Port du serveur (moi), longueur du char pour le buffer 
    	// Créer le client pour communiquer avec le serveur kuka
    	TCPClient client = new TCPClient("192.168.1.7", 30008); // Ip et port du robot kuka
    	
		/*String trameSvg = "{\"translate\":[0.000000,226.000000],\"scale\":[0.100000,-0.100000],\"pt\":[207.000000,226.000000],\"svg\":{\"00M\":[1370,1825],\"01c\":[-78,-13,-292,-13,-416,0],\"02l\":[-72,8,-6,-32],\"03c\":[-3,-17,-8,-44,-12,-60],\"04l\":[-5,-29,88,-15],\"05c\":[160,-29,363,-41,443,-26,39,7,74,17,77,22,3,6,9,41,13,79,7,79,15,74,-110,53],\"06m\":[100,-46],\"07c\":[0,-75,-9,-85,-87,-99,-56,-10,-99,-9,-243,4,-96,9,-196,21,-222,27,-52,12,-49,5,-32,85,5,27,5,27,72,19,115,-13,333,-13,412,0,41,7,81,13,88,14,8,1,12,-15,12,-50],\"08M\":[852,1648],\"09c\":[-18,-68,-23,-122,-13,-137,18,-28,397,-43,529,-20,58,10,65,14,77,44,8,17,16,54,19,82],\"10l\":[4,50,-46,-11],\"11c\":[-54,-11,-62,-19,-62,-62,0,-47,-27,-66,-91,-62],\"12l\":[-54,3,4,35],\"13c\":[9,80,14,74,-79,83,-95,8,-211,23,-251,33,-24,5,-27,2,-37,-38],\"14m\":[133,12],\"15c\":[39,-6,106,-13,150,-17],\"16l\":[80,-8,-4,-35],\"17c\":[-9,-79,-12,-75,59,-78,57,-3,67,0,82,19,10,11,18,33,18,48,0,38,12,50,50,53],\"18l\":[35,3,-4,-40],\"19c\":[-5,-58,-18,-84,-48,-98,-40,-17,-509,-16,-541,1,-21,12,-22,18,-17,60,4,26,11,62,17,80,8,28,14,33,32,27,11,-3,53,-10,91,-15],\"20M\":[1083,1615],\"21c\":[-39,-27,-24,-75,23,-75,29,0,46,23,42,57,-4,34,-32,41,-65,18],\"22m\":[52,-24],\"23c\":[0,-34,-30,-51,-52,-29,-16,16,-16,19,2,38,24,27,50,22,50,-9],\"24M\":[1456,1486],\"25c\":[-9,-7,-20,-63,-31,-146,-9,-74,-21,-162,-25,-195,-8,-57,-23,-186,-37,-305,-4,-30,-7,-73,-7,-95,-1,-36,1,-40,29,-45,29,-5,30,-7,30,-55,0,-37,6,-58,23,-79,17,-22,19,-32,11,-42,-15,-18,-39,-18,-39,0,0,18,-33,30,-59,21,-44,-14,-22,-96,31,-114,40,-14,96,0,127,32,33,36,38,87,11,142,-27,55,-21,95,13,95,53,0,69,41,81,208,5,68,4,73,-20,88,-18,12,-24,25,-24,51,0,41,15,73,35,73,8,0,21,10,28,23,18,29,41,285,27,302,-23,28,-181,59,-204,41],\"26m\":[155,-29],\"27c\":[20,-8,39,-19,42,-24,3,-5,1,-68,-5,-139,-11,-129,-23,-164,-55,-164,-17,0,-33,-41,-33,-88,0,-26,7,-42,24,-57,24,-20,24,-21,15,-124,-11,-120,-24,-148,-71,-153,-29,-3,-32,-7,-36,-39,-2,-24,4,-48,17,-70,28,-45,26,-81,-4,-118,-36,-42,-85,-57,-124,-36,-48,24,-56,95,-10,95,12,0,23,-8,26,-20,6,-23,45,-27,62,-6,13,15,6,39,-21,77,-13,17,-18,38,-16,69,3,42,2,45,-27,50,-27,5,-30,9,-29,40,1,34,27,273,44,395,4,33,16,119,25,190,9,72,21,135,26,141,11,13,99,2,150,-19],\"28M\":[786,1463],\"29c\":[-14,-14,-4,-41,17,-47,12,-4,58,-9,103,-13,62,-4,83,-10,92,-24,10,-15,7,-18,-16,-23,-15,-3,-43,-4,-62,-1,-19,2,-58,7,-86,11,-46,6,-53,4,-63,-14,-19,-35,17,-44,213,-54,100,-5,190,-9,201,-10,35,-2,179,14,203,23,17,7,22,15,20,32,-2,18,-8,21,-35,19,-27,-3,-32,0,-27,13,4,9,22,22,40,30,21,8,34,21,34,32,0,15,-2,14,-16,-5,-8,-12,-24,-22,-34,-22,-11,0,-24,-9,-30,-19,-18,-35,-12,-44,25,-38,27,4,35,2,35,-9,0,-8,-10,-19,-22,-24,-26,-10,-172,-26,-203,-22,-11,2,-96,7,-190,11,-174,9,-209,15,-202,35,4,11,21,11,155,3,78,-5,91,2,72,38,-10,20,-22,23,-98,28,-89,6,-122,13,-122,27,0,16,34,20,94,10,78,-14,469,-8,516,8],\"30l\":[35,11,-35,-6],\"31c\":[-48,-9,-481,-10,-552,-1,-31,4,-59,4,-62,1],\"32M\":[670,1454],\"33c\":[-73,-11,-130,-27,-140,-39,-10,-12,-33,-124,-47,-234,-6,-42,-4,-47,27,-72,31,-27,32,-30,28,-88,-4,-55,-8,-65,-41,-95,-21,-19,-38,-44,-39,-57,0,-13,-2,-35,-3,-49,-2,-14,-6,-99,-10,-190,-9,-187,-11,-181,73,-213,61,-24,118,-22,132,4,6,11,15,100,21,197,5,97,13,223,19,280,42,427,51,505,56,514,3,4,2,17,-1,28,-6,20,-18,22,-75,14],\"34m\":[63,-34],\"35c\":[-1,-14,-6,-70,-13,-125,-10,-95,-17,-160,-40,-397,-6,-57,-14,-183,-20,-281,-5,-109,-13,-184,-21,-193,-24,-29,-143,-3,-178,40,-13,16,-12,149,3,363,4,48,26,89,54,97,21,7,20,4,28,99,6,68,6,69,-26,96,-36,30,-36,13,-10,176,18,118,28,128,135,145,77,12,90,9,88,-20],\"36M\":[758,1252],\"37c\":[-4,-12,0,-23,7,-26,34,-13,310,-28,442,-24,144,4,193,14,193,40,0,6,-9,3,-21,-8,-20,-18,-38,-19,-263,-18,-249,2,-336,10,-344,32,-5,16,156,16,312,1,91,-9,130,-8,216,5,93,13,96,14,25,8,-94,-8,-150,-8,-386,3,-173,8,-176,8,-181,-13],\"38M\":[751,1172],\"39c\":[-15,-29,-14,-31,16,-43,29,-11,613,-20,611,-10,-1,3,2,14,7,24,4,10,5,20,3,23,-3,2,-135,6,-294,7,-159,2,-299,7,-311,11,-16,6,-24,3,-32,-12],\"40m\":[338,-9],\"41c\":[156,-2,285,-4,287,-6,2,-1,-1,-9,-6,-17,-8,-13,-53,-15,-294,-13,-294,2,-341,8,-315,39,8,9,18,12,28,7,9,-4,144,-9,300,-10],\"42M\":[756,1075],\"43c\":[-22,-23,-20,-34,10,-45,30,-12,535,-15,577,-5,23,6,28,12,25,34,-3,22,-7,25,-28,21,-41,-8,-461,-6,-516,3,-42,7,-54,5,-68,-8],\"44m\":[305,-12],\"45c\":[138,-3,240,-1,262,5,33,9,37,8,37,-8,0,-10,-8,-21,-17,-25,-30,-11,-552,-6,-574,6,-32,17,-5,43,35,34,17,-4,133,-9,257,-12],\"46M\":[752,982],\"47c\":[-23,-16,-9,-46,23,-53,52,-11,520,-10,552,2,20,7,32,19,35,34,5,24,4,24,-56,17,-84,-9,-288,-9,-426,1,-66,4,-121,4,-128,-1],\"48m\":[368,-17],\"49c\":[69,0,147,2,174,5,57,6,72,-11,28,-29,-21,-9,-104,-11,-290,-9,-260,3,-296,8,-277,38,5,9,37,10,124,3,64,-4,172,-8,241,-8],\"50M\":[722,824],\"51c\":[-2,-49,-5,-96,-8,-105,-7,-24,16,-38,66,-41],\"52l\":[45,-3,0,-135,0,-135,94,-3],\"53c\":[52,-1,98,1,102,5,4,4,10,46,13,93,3,47,9,104,12,127,6,39,8,41,46,45,22,2,55,2,73,0],\"54l\":[33,-4,-5,-66],\"55c\":[-2,-37,-5,-69,-5,-72,-2,-25,6,-30,47,-30,25,0,45,-4,45,-9,0,-12,-51,-21,-115,-21,-51,0,-53,-1,-57,-30,-3,-19,0,-31,10,-35,23,-8,136,-5,151,4,9,6,16,30,18,58,2,26,7,71,13,98,13,71,42,243,47,288],\"56l\":[5,37,-310,0],\"57c\":[-230,0,-311,3,-314,12,-2,6,-5,-29,-6,-78],\"58m\":[615,24],\"59c\":[-2,-18,-11,-71,-20,-118,-8,-47,-18,-111,-22,-142,-3,-31,-12,-62,-20,-68,-16,-13,-81,-9,-78,5,1,6,4,42,7,81],\"60l\":[5,72,-38,4],\"61c\":[-21,2,-59,2,-84,0],\"62l\":[-45,-4,-6,-51],\"63c\":[-4,-29,-9,-86,-12,-127,-2,-41,-8,-78,-13,-83,-4,-4,-46,-7,-92,-5],\"64l\":[-84,3,0,135,0,135,-34,2],\"65c\":[-76,3,-77,5,-74,80,2,37,6,78,9,91],\"66l\":[4,22,301,0,301,0,-5,-32],\"67m\":[-57,-392],\"68c\":[0,-33,-30,-47,-94,-44,-54,3,-61,5,-64,25,-3,20,1,22,60,26,35,2,71,4,81,5,9,1,17,-4,17,-12]}}";
		// Parcours les objets JSON
		try {
			JSONObject jSvgObject = new JSONObject(trameSvg);
			jSvgObject = jSvgObject.getJSONObject("svg");
		
			for (@SuppressWarnings("rawtypes")
			Iterator iterator = jSvgObject.sortedKeys(); iterator.hasNext();) {
				String cle = String.valueOf(iterator.next());
				System.out.println("Cle : " + cle);
			}
		} catch (JSONException e) { e.printStackTrace(); }*/
    	
    	// Gestion du serveur
    	if(server.getIsRun()){
    		// Tant qu'on ne demande pas d'arreter le robot et le serveur
	    	while(server.getMessage().equals("stopserver") == false){
	    		// Attente d'un message par le client (IHM)
	    		server.listenSocket();
	    		// Envoi le message au serveur kuka
	    		if(server.getMessage() != "") client.sendMessage(server.getMessage());
	    	}
    	}
    	
    	// Ferme le server
    	server.closeServer();
    }
     
}